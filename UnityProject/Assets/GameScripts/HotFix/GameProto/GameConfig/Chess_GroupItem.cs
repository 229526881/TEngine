
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;


namespace GameConfig
{
public sealed partial class Chess_GroupItem : Luban.BeanBase
{
    public Chess_GroupItem(ByteBuf _buf) 
    {
        Id = _buf.ReadInt();
        Key = _buf.ReadInt();
        GroupName = _buf.ReadString();
        TypeTag = (ChessTagType)_buf.ReadInt();
        ChessDetailType = (ChessDetailType)_buf.ReadInt();
        DetailDes = _buf.ReadString();
        SourceGroupId = _buf.ReadInt();
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);SourceIdList = new System.Collections.Generic.List<int>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { int _e0;  _e0 = _buf.ReadInt(); SourceIdList.Add(_e0);}}
        MergeCoinLevel = _buf.ReadInt();
        GroupDes = _buf.ReadString();
        DesExtra = _buf.ReadString();
        ActivityId = _buf.ReadString();
    }

    public static Chess_GroupItem DeserializeChess_GroupItem(ByteBuf _buf)
    {
        return new Chess_GroupItem(_buf);
    }

    /// <summary>
    /// groupID
    /// </summary>
    public readonly int Id;
    /// <summary>
    /// group索引
    /// </summary>
    public readonly int Key;
    /// <summary>
    /// 名称
    /// </summary>
    public readonly string GroupName;
    /// <summary>
    /// 页签类型
    /// </summary>
    public readonly ChessTagType TypeTag;
    /// <summary>
    /// 详情类型
    /// </summary>
    public readonly ChessDetailType ChessDetailType;
    /// <summary>
    /// 详情面板描述
    /// </summary>
    public readonly string DetailDes;
    /// <summary>
    /// 来源groupID
    /// </summary>
    public readonly int SourceGroupId;
    /// <summary>
    /// 来源的特定棋子
    /// </summary>
    public readonly System.Collections.Generic.List<int> SourceIdList;
    /// <summary>
    /// 合成到该等级会生成金币
    /// </summary>
    public readonly int MergeCoinLevel;
    /// <summary>
    /// 组描述
    /// </summary>
    public readonly string GroupDes;
    public readonly string DesExtra;
    /// <summary>
    /// 活动id
    /// </summary>
    public readonly string ActivityId;
   
    public const int __ID__ = 2114684787;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + Id + ","
        + "key:" + Key + ","
        + "groupName:" + GroupName + ","
        + "typeTag:" + TypeTag + ","
        + "chessDetailType:" + ChessDetailType + ","
        + "detailDes:" + DetailDes + ","
        + "sourceGroupId:" + SourceGroupId + ","
        + "sourceIdList:" + Luban.StringUtil.CollectionToString(SourceIdList) + ","
        + "mergeCoinLevel:" + MergeCoinLevel + ","
        + "groupDes:" + GroupDes + ","
        + "desExtra:" + DesExtra + ","
        + "activityId:" + ActivityId + ","
        + "}";
    }
}

}

